{{- if not .Values.clickhouse.external }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse-server
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      component: clickhouse
  replicas: 1
  serviceName: clickhouse
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        component: clickhouse
{{- if or .Values.clickhouse.podAnnotations .Values.clickhouse.prometheusEnabled }}
      annotations:
{{- range $key, $value := .Values.clickhouse.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
{{- end }}
{{- if .Values.clickhouse.prometheusEnabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.clickhouse.exporterPort | quote }}
{{- end }}
{{- end }}
    spec:
      initContainers:
      - name: chown
        image: busybox
        command:
        - chown
        - -R
        - 101:101
        - /var/lib/clickhouse
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: data
          mountPath: /var/lib/clickhouse/
      containers:
{{- if .Values.clickhouse.prometheusEnabled }}
      - name: clickhouse-exporter
        image: {{ .Values.clickhouse.exporter.image }}:{{ .Values.clickhouse.exporter.version }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - "-telemetry.address"
        - {{ template "clickhouseExporterBind" $ }}
        ports:
        - name: http-metrics
          containerPort: {{ .Values.clickhouse.exporterPort }}
        envFrom:
        - secretRef:
            name: clickhouse-credentilas
        {{ include "includeByName" (dict "root" .Values.clickhouse.exporter "name" "resources") | indent 8 | trim }}
{{- end }}
      - name: clickhouse
        image: {{ .Values.clickhouse.image }}:{{ .Values.clickhouse.version }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.clickhouse.httpPort }}
        - name: native
          containerPort: {{ .Values.clickhouse.port }}
        env:
        - name: CLICKHOUSE_SERVER
          value: {{ .Values.clickhouse.server | quote }}
        - name: CLICKHOUSE_PORT
          value: {{ .Values.clickhouse.port | quote }}
        - name: CLICKHOUSE_DATABASE
          value: {{ .Values.clickhouse.db | quote }}
        - name: K8S_LOGS_TABLE
          value: {{ .Values.clickhouse.table | quote }}
        envFrom:
        - secretRef:
            name: clickhouse-credentilas
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: {{ .Values.clickhouse.port }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.clickhouse.httpPort }}
          timeoutSeconds: 1
          initialDelaySeconds: 5
        {{ include "includeByName" (dict "root" .Values.clickhouse "name" "resources") | indent 8 | trim }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/clickhouse/
        - name: config-volume
          mountPath: /etc/clickhouse-server/
{{- if .Values.doDbDeploy }}
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d/
{{- end }}
        - name: working-dir
          mountPath: /nonexistent/
      securityContext:
        runAsUser: 101
        fsGroup: 101
{{- if .Values.clickhouse.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.clickhouse.imagePullSecrets | indent 6 }}
{{- end }}
      volumes:
{{- if not .Values.storage.pvc }}
{{- if .Values.storage.hostpath }}
      - name: data
        hostPath:
          path: {{ .Values.storage.hostpath }}
{{- else }}
      - name: data
        emptyDir:
          sizeLimit: "0"
{{- end }}
{{- else }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ template "clickhousePvcName" $ }}
{{- end }}
      - name: working-dir
        emptyDir: {}
      - name: config-volume
        configMap:
          name: clickhouse-config
{{- if .Values.doDbDeploy }}
      - name: initdb
        configMap:
          name: clickhouse-initdb
{{- end }}
      {{ include "includeByName" (dict "root" .Values.clickhouse "name" "nodeSelector") | indent 6 | trim }}
      {{ include "includeByName" (dict "root" .Values.clickhouse "name" "tolerations") | indent 6 | trim }}
{{- end }}
