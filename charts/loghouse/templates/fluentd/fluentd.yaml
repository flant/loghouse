apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: fluentd
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      k8s-app: fluentd
  template:
    metadata:
      labels:
        k8s-app: fluentd
        kubernetes.io/cluster-service: "true"
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        prometheus.io/scrape: "true"
        prometheus.io/port: "24231"
    spec:
      serviceAccountName: fluentd
      containers:
      - name: fluentd
        image: {{ .Values.fluentd.image }}:{{ template "app.version" $ }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        - name: CLICKHOUSE_SERVER
          value: {{ .Values.clickhouse.server | quote }}
        - name: CLICKHOUSE_PORT
          value: {{ .Values.clickhouse.port | quote }}
        - name: CLICKHOUSE_DB
          value: {{ .Values.clickhouse.db | quote }}
        - name: K8S_LOGS_TABLE
          value: {{ .Values.clickhouse.table | quote }}
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLICKHOUSE_PASS
          valueFrom:
            secretKeyRef:
              name: clickhouse
              key: CLICKHOUSE_PASSWORD
        envFrom:
        - secretRef:
            name: clickhouse
        resources:
          limits:
            memory: {{ .Values.fluentd.resources.limits.memory }}
            cpu: {{ .Values.fluentd.resources.limits.cpu }}
          requests:
            memory: {{ .Values.fluentd.resources.requests.memory }}
            cpu: {{ .Values.fluentd.resources.requests.cpu }}
        volumeMounts:
{{- if .Values.docker_path }}
        - name: dockerpath
          mountPath: {{ .Values.docker_path }}
          readOnly: true
{{- end }}
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: libsystemddir
          mountPath: /host/lib
          readOnly: true
        - name: config-volume
          mountPath: /etc/fluent/config.d
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: "node-role/logging"
        operator: "Exists"
      - key: "node-role/system"
        operator: "Exists"
      - key: "node-role/monitoring"
        operator: "Exists"
      - key: "node-role/ingress"
        operator: "Exists"
      - key: "node-role/frontend"
        operator: "Exists"
      - key: "dedicated"
        operator: "Exists"
{{- if .Values.install_master }}
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
{{- end }}
{{- if .Values.fluentd.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.fluentd.imagePullSecrets | indent 6 }}
{{- end }}
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
{{- if .Values.docker_path }}
      - name: dockerpath
        hostPath:
          path: {{ .Values.docker_path }}
{{- end }}
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: libsystemddir
        hostPath:
          path: /usr/lib64
      - name: config-volume
        configMap:
          name: fluentd-config
