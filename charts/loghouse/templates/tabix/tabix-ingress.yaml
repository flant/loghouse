{{- if and .Values.ingress.enable .Values.enable_tabix }}
apiVersion: {{ template "Ingress.apiVersion" $ }}
kind: Ingress
metadata:
  name: tabix
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authrentication Required"
{{- if .Values.ingress.enable_https }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
{{- else }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
{{- end }}
spec:
  rules:
  - host: {{ .Values.ingress.tabix.host }}
    http:
      paths:
      - path: {{ .Values.ingress.tabix.path }}
        backend:
          serviceName: tabix
          servicePort: http
{{- if .Values.ingress.enable_https }}
  tls:
  - hosts:
    - {{ .Values.ingress.tabix.host }}
    secretName: {{ .Values.ingress.tabix.tls_secret_name }}
{{- if .Values.ingress.tabix.tls_issuer }}
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: {{ .Values.ingress.tabix.tls_secret_name}}
spec:
  acme:
    config:
    - domains:
      - {{ .Values.ingress.tabix.host }}
      http01:
        ingressClass: nginx
  dnsNames:
  - {{ .Values.ingress.tabix.host }}
  issuerRef:
    kind: ClusterIssuer
    name:  {{ .Values.ingress.clickhouse.tls_secret_name }}
  secretName: {{ .Values.ingress.tabix.tls_secret_name }}
{{- end }}
{{- end }}
{{- end }}
